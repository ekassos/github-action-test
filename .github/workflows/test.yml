name: Generate Swift Book PDFs

on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'Optional specific commit SHA of swift-book to build from'
        required: false

permissions:
  contents: write

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    steps:

        - name: Checkout repository
          uses: actions/checkout@v4
            
        - name: Make sample commit via GitHub API
          uses: actions/github-script@v7
          with:
            script: |
              const date = new Date().toISOString();
              const content = `Last updated: ${date}`;
              const contentBase64 = Buffer.from(content).toString('base64');
              
              // Try to get the current file to check if it exists
              let sha;
              try {
                const { data: currentFile } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: 'sample-commit.txt'
                });
                sha = currentFile.sha;
              } catch (error) {
                // File doesn't exist yet
                sha = undefined;
              }
              
              // Create or update the file
              const { data } = await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'sample-commit.txt',
                message: `chore: automated sample commit by GitHub Actions bot\n\nThis commit was automatically generated and signed by the GitHub Actions bot.\nTimestamp: ${date}`,
                content: contentBase64,
                sha: sha // Include SHA if updating existing file
              });
              
              console.log('Commit created:', data.commit.sha);
              console.log('Commit author:', data.commit.author);
              console.log('Commit verification:', data.commit.verification);
              
  generate-pdfs-alt:
    runs-on: ubuntu-latest
    needs: generate-pdfs  # Run this job after the first one completes
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            fetch-depth: 0
            
        - name: Pull latest changes
          run: |
            git pull origin main
            
        - name: Make sample commit with proper authentication
          run: |
            # Configure git with the correct bot identity
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            
            # Create or update a sample file
            echo "Last updated (alternative method): $(date)" > sample-commit-alt.txt
            
            # Stage and commit
            git add sample-commit-alt.txt
            git commit -m "chore: automated sample commit by GitHub Actions bot (alternative)
            
            This commit was automatically generated and signed by the GitHub Actions bot.
            Timestamp: $(date)"
            
            # Push directly with the token
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
        
